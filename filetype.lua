local util            = require("util")
local homedir         = vim.uv.os_homedir()
local xdg_config_home = util.readlink("XDG_CONFIG_HOME")
local xdg_cache_home  = os.getenv("XDG_CACHE_HOME")

vim.filetype.add({
  extension = {
    ["code-workspace"] = "json",
    actiongrap         = "json",
    alfredappearance   = "json",
    apinotes           = "yaml",
    asm                = "nasm",
    cnf                = "ini",
    conf               = "conf",
    defs               = "c",
    dockerfile         = "dockerfile",
    dockerignore       = "gitignore",
    editorconfig       = "dosini",
    envrc              = "sh",
    es6                = "javascript",
    gcloudignore       = "gitignore",
    go                 = "go",
    go2                = "go",
    gunk               = "gunk.go",
    hla                = "hla",
    hujson             = "json5",
    i                  = "swig",
    icls               = "xml",
    inc                = "masm",
    jsonc              = "jsonc",
    jsonl              = "jsonl",
    mm                 = "objcpp",
    pbtxt              = "proto",
    pth                = "python",
    pyd                = "python",
    pyx                = "python",
    replay             = "json",
    -- s                  = "goasm",
    sb                 = "scheme",
    slide              = "goslide",
    sql                = "mysql",
    swig               = "swig",
    swigcxx            = "swig",
    tbd                = "yaml",
    tfstate            = "teraterm",
    tmpl               = "gotmpl",
    tpl                = "gotmpl",
    ts                 = "typescript",
    vfj                = "jsonc",
    vmoptions          = "conf",
    y                  = "goyacc",
  },
  filename = {
    [".bash_profile"]    = "sh",
    [".bazelrc"]         = "bzl",
    [".boto"]            = "cfg",
    [".clang-format"]    = "yaml",
    [".clangd"]          = "yaml",
    [".dockerignore"]    = "gitignore",
    [".env"]             = "sh",
    [".env.golden"]      = "sh",
    [".env.sample"]      = "sh",
    [".envrc"]           = "sh",
    [".eslintignore"]    = "gitignore",
    [".firebaserc"]      = "json",
    [".gcloudignore"]    = "gitignore",
    [".gunkconfig"]      = "cfg",
    [".markdownlintrc"]  = "json",
    [".prettierignore"]  = "gitignore",
    [".pythonrc"]        = "python",
    [".renovaterc"]      = "json5",
    [".renovaterc.json"] = "json5",
    [".tern-config"]     = "json",
    [".tfvars"]          = "teraterm",
    [".yamlfmt"]         = "yaml",
    [".yamllint"]        = "yaml",
    ["glide.lock"]       = "yaml",
    ["Gopkg.lock"]       = "toml",
    ["kitty.conf"]       = "kitty",
    ["lsif.json"]        = "json5",
    ["netrc"]            = "netrc",
    ["osquery.conf"]     = "json",
    ["poetry.lock"]      = "toml",
    ["proto.lock"]       = "json",
    ["tsconfig%.json"]   = "json5",
    bash_profile         = "sh",
    boto                 = "cfg",
    manifest             = "json",
    PROJECT              = "yaml",
    Tiltfile             = "tiltfile",
  },
  pattern = {
    -- [".*/kustomize/.*.yaml"]                                       = "yaml",
    [".*.go.tpl"]                                                     = "gotmpl",
    [".*.keymap"]                                                     = "devicetree",
    [".*.py.tmpl"]                                                    = "python",
    [".*.schema.json"]                                                = "jsonschema",
    [".*.tf.tmpl"]                                                    = "terraform",
    [".*.xo.go.tpl"]                                                  = "go",
    [".*/.?git/config"]                                               = "gitconfig",
    [".*/.?kube/config"]                                              = "yaml",
    [".*/.jira.d/templates/.*"]                                       = "gotmpl",
    [".*/.vscode/.*.json"]                                            = "json5",
    [".*/argocd/config"]                                              = "yaml",
    [".*/c%+%+/.*"]                                                   = "cpp",
    [".*/google%-cloud%-sdk/properties"]                              = "cfg",
    [".*/kitty/.*.conf"]                                              = "kitty",
    [".*/makedefs/.*"]                                                = "make",
    [".*/share/zsh/(site-)?functions/.*"]                             = "zsh",
    [".*/testdata/.*/.*.go.golden"]                                   = "go",
    [".*renovate.json"]                                               = "json5",
    ["/private/etc/sudoers.d/.*"]                                     = "sudoers",
    ["[Dd]ockerfile.*[^.vim]"]                                        = "dockerfile",
    [vim.fs.joinpath(homedir, ".ssh/config.d/.*")]                    = "sshconfig",
    [vim.fs.joinpath(xdg_cache_home, "go/go-build/.*")]               = "go",
    [vim.fs.joinpath(xdg_cache_home, "go/go-build/.*/.*")]            = "go",
    [vim.fs.joinpath(xdg_config_home, "cabal")]                       = "cabalconfig",
    [vim.fs.joinpath(xdg_config_home, "direnv/direnvrc")]             = "sh",
    [vim.fs.joinpath(xdg_config_home, "gcloud/configurations/.*")]    = "cfg",
    [vim.fs.joinpath(xdg_config_home, "git/config.d/.*")]             = "gitconfig",
    [vim.fs.joinpath(xdg_config_home, "go/env/.*")]                   = "sh",
    [vim.fs.joinpath(xdg_config_home, "jira.d/templates/.*")]         = "gotmpl",
    [vim.fs.joinpath(xdg_config_home, "op/config")]                   = "json",
    [vim.fs.joinpath(xdg_config_home, "zsh/.*")]                      = "zsh",
    -- [vim.fs.joinpath(xdg_data_home, "token/token")]                = "sh",
    ["/Users/zchee/src/github.com/zchee/dotfiles/.local/share/token"] = "sh",
  },
})
