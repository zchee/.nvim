local util        = require("util")
local async       = require("plenary.async")

local join        = vim.fs.joinpath

local homedir     = async.uv.os_homedir()
local cache_home  = util.xdg_cache_home()
local config_home = util.xdg_config_home()

vim.filetype.add({
  extension = {
    -- s                  = "goasm",
    ["code-workspace"] = "json",
    actiongrap         = "json",
    alfredappearance   = "json",
    apinotes           = "yaml",
    asm                = "nasm",
    bttpreset          = "json",
    cnf                = "ini",
    conf               = "conf",
    defs               = "c",
    dockerfile         = "dockerfile",
    dockerignore       = "gitignore",
    editorconfig       = "dosini",
    envrc              = "sh",
    es6                = "javascript",
    gcloudignore       = "gitignore",
    go                 = "go",
    go2                = "go",
    gunk               = "gunk.go",
    hla                = "hla",
    hujson             = "json5",
    i                  = "swig",
    icls               = "xml",
    inc                = "masm",
    jsonc              = "jsonc",
    jsonl              = "jsonl",
    mm                 = "objcpp",
    pbtxt              = "proto",
    pth                = "python",
    pyd                = "python",
    pyx                = "python",
    replay             = "json",
    sb                 = "scheme",
    slide              = "goslide",
    sql                = "mysql",
    swig               = "swig",
    swigcxx            = "swig",
    tbd                = "yaml",
    tfstate            = "teraterm",
    tmpl               = "gotmpl",
    tpl                = "gotmpl",
    ts                 = "typescript",
    vfj                = "jsonc",
    vmoptions          = "conf",
    y                  = "goyacc",
  },
  filename = {
    [".bash_profile"]    = "bash",
    [".bazelrc"]         = "bzl",
    [".boto"]            = "cfg",
    [".clang-format"]    = "yaml",
    [".clangd"]          = "yaml",
    [".dockerignore"]    = "gitignore",
    [".eslintignore"]    = "gitignore",
    [".firebaserc"]      = "json",
    [".gcloudignore"]    = "gitignore",
    [".gunkconfig"]      = "cfg",
    [".markdownlintrc"]  = "json",
    [".prettierignore"]  = "gitignore",
    [".pythonrc"]        = "python",
    [".renovaterc"]      = "json5",
    [".renovaterc.json"] = "json5",
    [".tern-config"]     = "json",
    [".tfvars"]          = "teraterm",
    [".yamlfmt"]         = "yaml",
    [".yamllint"]        = "yaml",
    ["glide.lock"]       = "yaml",
    ["Gopkg.lock"]       = "toml",
    ["kitty.conf"]       = "kitty",
    ["lsif.json"]        = "json5",
    ["netrc"]            = "netrc",
    ["osquery.conf"]     = "json",
    ["poetry.lock"]      = "toml",
    ["proto.lock"]       = "json",
    ["tsconfig%.json"]   = "json5",
    bash_profile         = "sh",
    boto                 = "cfg",
    manifest             = "json",
    PROJECT              = "yaml",
    Tiltfile             = "tiltfile",
  },
  -- [".*/kustomize/.*.yaml"]                                       = "yaml",
  pattern = {
    [".*%.go%.tpl"]                                            = "gotmpl",
    [".*%.keymap"]                                             = "devicetree",
    [".*%.py%.tmpl"]                                           = "python",
    [".*.schema%.json"]                                        = "jsonschema",
    [".*%.tf%.tmpl"]                                           = "terraform",
    [".*%.xo%.go%.tpl"]                                        = "go",
    [".*/.?git/config"]                                        = "gitconfig",
    [".*/.?kube/config"]                                       = "yaml",
    [".*/.jira.d/templates/.*"]                                = "gotmpl",
    [".*/.vscode/.*%.json"]                                    = "json5",
    [".*/argocd/config"]                                       = "yaml",
    [".*/c%+%+/.*"]                                            = "cpp",
    [".*/google%-cloud%-sdk/properties"]                       = "cfg",
    [".*/kitty/.*%.conf"]                                      = "kitty",
    [".*/makedefs/.*"]                                         = "make",
    [".*/share/zsh/(site-)?functions/.*"]                      = "zsh",
    [".*/testdata/.*/.*%.go%.golden"]                          = "go",
    [".*bashrc.*"]                                             = "bash",
    [".*renovate%.json"]                                       = "json5",
    [".env.*"]                                                 = "bash",
    [".envrc.*"]                                               = "bash",
    ["/private/etc/sudoers.d/.*"]                              = "sudoers",
    ["[Dd]ockerfile.*[^.vim]"]                                 = "dockerfile",
    ['.*README.(%a+)']                                         = function(_, _, ext)
      util.switch(ext) {
        ["md"] = function() return "markdown" end,
        ["rst"] = function() return "rst" end,
      }
    end,
    [join(homedir, "%.ssh/config.d/.*")]                       = "sshconfig",
    [join(cache_home, "go/go-build/.*")]                       = "go",
    [join(cache_home, "go/go-build/.*/.*")]                    = "go",
    [join(config_home, "cabal")]                               = "cabalconfig",
    [join(config_home, "direnv/direnvrc")]                     = "sh",
    [join(config_home, "gcloud/configurations/.*")]            = "cfg",
    [join(config_home, "git/config.d/.*")]                     = "gitconfig",
    [join(config_home, "go/env/.*")]                           = "sh",
    [join(config_home, "jira.d/templates/.*")]                 = "gotmpl",
    [join(config_home, "op/config")]                           = "json",
    [join(config_home, "zsh/.*")]                              = "zsh",
    [util.readlink(join(util.xdg_data_home(), "token/token"))] = "sh",
  },
})
