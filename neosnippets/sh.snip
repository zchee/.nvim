snippet     shebang-env
abbr        #!/usr/bin/env ${...}
options     head
	#!/usr/bin/env ${1}
	${0}

snippet     shebang-sh
alias       shebang-sh
abbr        #!/bin/sh
options     head
	#!/bin/bash
	${0}

snippet     shebang-bash
alias       shebang-bash
abbr        #!/bin/bash
options     head
	#!/bin/bash
	${0}

snippet     shebang-zsh
alias       shebang-zsh
abbr        #!/usr/bin/env zsh
options     head
	#!/usr/bin/env zsh
	${0}

snippet     strict
abbr        strict
	set -euo pipefail
	${0}

snippet     devnull
abbr        > /dev/null 2>&1
	> /dev/null 2>&1${0}

snippet     info
abbr        [INFO] ...
	info() { printf "\\x1b[1;34m[INFO]\\x1b[0m %s\\\n" "\$1" >&2; }
	${0}

snippet     warn
abbr        [WARN] ...
	warn() { printf "\\x1b[1;33m[WARN]\\x1b[0m %s\\\n" "\$1" >&2; }
	${0}

snippet     error
abbr        [ERROR] ...
	error() { printf "\\x1b[1;31m[ERROR]\\x1b[0m %s\\\n" "\$1" >&2; exit 1; }
	${0}

snippet     command-v
alias       command-v
abbr        command -v ${1} && { error '...' }
	command -v ${1:#:command name} >/dev/null 2>&1 || { error "command not found: $1"; }${0}

snippet     echo-var
alias       var
abbr        echo "var: $var"
	echo "$1: \$${1}"${0}

snippet     check-arg
alias       arg
abbr        if [ \$# -eq \${1} ]; then [FATAL] ...
	if [ $# -eq ${1:#:arg length} ]; then printf "\\x1b[1;31m[ERROR]\\x1b[0m %s\\\n" "${2:#:msg}"; exit 1; fi

snippet     cwd
abbr        CWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
	CWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"${0}
