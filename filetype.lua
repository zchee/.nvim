local util       = require("util")

local joinpath   = vim.fs.joinpath
local homedir    = vim.uv.os_homedir()
local cache_home = util.xdg_cache_home()

vim.filetype.add({
  extension = {
    -- s                  = "goasm",
    ["code-workspace"] = "json",
    actiongrap         = "json",
    alfredappearance   = "json",
    apinotes           = "yaml",
    asm                = "nasm",
    bttpreset          = "json",
    cnf                = "ini",
    conf               = "conf",
    defs               = "c",
    dockerfile         = "dockerfile",
    dockerignore       = "gitignore",
    editorconfig       = "dosini",
    envrc              = "sh",
    es6                = "javascript",
    gcloudignore       = "gitignore",
    go                 = "go",
    go2                = "go",
    gunk               = "gunk.go",
    hla                = "hla",
    hujson             = "jsonc",
    i                  = "swig",
    icls               = "xml",
    inc                = "masm",
    jsonc              = "jsonc",
    jsonl              = "jsonl",
    mm                 = "objcpp",
    pbtxt              = "proto",
    pth                = "python",
    pyd                = "python",
    pyx                = "python",
    replay             = "json",
    sb                 = "scheme",
    slide              = "goslide",
    sql                = "mysql",
    swig               = "swig",
    swigcxx            = "swig",
    tbd                = "yaml",
    tfstate            = "teraterm",
    tmpl               = "gotmpl",
    tpl                = "gotmpl",
    ts                 = "typescript",
    vfj                = "jsonc",
    vmoptions          = "conf",
    y                  = "goyacc",
  },
  filename = {
    [".aiderignore"]     = "gitignore",
    [".bash_profile"]    = "bash",
    [".bazelrc"]         = "bzl",
    [".boto"]            = "cfg",
    [".clang-format"]    = "yaml",
    [".clangd"]          = "yaml",
    [".dockerignore"]    = "gitignore",
    [".eslintignore"]    = "gitignore",
    [".firebaserc"]      = "json",
    [".gcloudignore"]    = "gitignore",
    [".gunkconfig"]      = "cfg",
    [".markdownlintrc"]  = "json",
    [".prettierignore"]  = "gitignore",
    [".pythonrc"]        = "python",
    [".renovaterc"]      = "json5",
    [".renovaterc.json"] = "json5",
    [".tern-config"]     = "json",
    [".tfvars"]          = "teraterm",
    [".yamlfmt"]         = "yaml",
    [".yamllint"]        = "yaml",
    -- ["docker-bake.hcl"]  = "docker-bake",
    ["glide.lock"]       = "yaml",
    ["go.tool.mod"]      = "gomod",
    ["Gopkg.lock"]       = "toml",
    ["kitty.conf"]       = "kitty",
    ["lsif.json"]        = "json5",
    ["netrc"]            = "netrc",
    ["osquery.conf"]     = "json",
    ["poetry.lock"]      = "toml",
    ["proto.lock"]       = "json",
    ["tsconfig%.json"]   = "json5",
    bash_profile         = "sh",
    boto                 = "cfg",
    manifest             = "json",
    PROJECT              = "yaml",
    Tiltfile             = "tiltfile",
  },
  pattern = {
    [".*%.go%.tpl"]                          = "gotmpl",
    [".*%.keymap"]                           = "devicetree",
    [".*%.py%.tmpl"]                         = "python",
    [".*%.tf%.tmpl"]                         = "terraform",
    [".*%.xo%.go%.tpl"]                      = "go",
    [".*.schema%.json"]                      = "jsonschema",
    [".*/.?git/config"]                      = "gitconfig",
    [".*/.?kube/config"]                     = "yaml",
    [".*/.config/%.ssh/config.d/.*"]         = "sshconfig",
    [".*/.config/cabal"]                     = "cabalconfig",
    [".*/.config/direnv/direnvrc"]           = "sh",
    [".*/.config/gcloud/configurations/.*"]  = "cfg",
    [".*/.config/git/config.d/.*"]           = "gitconfig",
    [".*/.config/go/env/.*"]                 = "sh",
    [".*/.config/jira.d/templates/.*"]       = "gotmpl",
    [".*/.config/op/config"]                 = "json",
    [".*/.config/tig/config*"]               = "tigrc",
    [".*/.jira.d/templates/.*"]              = "gotmpl",
    [".*/.vscode/.*%.json"]                  = "json5",
    [".*/argocd/config"]                     = "yaml",
    [".*/c%+%+/.*"]                          = "cpp",
    [".*/google%-cloud%-sdk/properties"]     = "cfg",
    [".*/kitty/.*%.conf"]                    = "kitty",
    [".*/makedefs/.*"]                       = "make",
    [".*/share/zsh/(site-)?functions/.*"]    = "zsh",
    [".*/testdata/.*/.*%.go%.golden"]        = "go",
    [".*/zed/settings.json"]                 = "jsonc",
    [".*/zsh/functions/.*"]                  = "zsh",
    [".*/zsh_history"]                       = "zsh",
    [".*bashrc.*"]                           = "bash",
    [".*lima%-editor%-.*"]                   = "yaml", -- for limactl edit
    [".*renovate%.json"]                     = "json5",
    [".env.*"]                               = "bash",
    [".envrc.*"]                             = "bash",
    ["/private/etc/sudoers.d/.*"]            = "sudoers",
    ["[Dd]ockerfile.*[^.vim|^.lua]"]         = "dockerfile",
    [joinpath(cache_home, "go/go-build/**")] = "go",
    ['.*README.(%a+)']                       = function(_, _, ext)
      util.switch(ext) {
        ["md"] = function() return "markdown" end,
        ["rst"] = function() return "rst" end,
      }
    end,
  },
})
